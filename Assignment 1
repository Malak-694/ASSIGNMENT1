// Program: c++filters.cpp
//FCAI_OOP_2023/2024_year two_Assignment1_first submition
// Purpose: to make changes in certain image by using six filters
// Authors , IDs, & Emails:
// Mariam Mahmoud Ibrahim -> 20221207 -> 288mariam@gmail.com
// Malak Ahmed -> 20221157 -> malakeltabakh2020@gmail.com
// Hadeel Khaled -> 20220444 -> hadeelkhaled315@gmail.com
// Date: 5 oct 2023
// Version: 1.0

#include <iostream>
#include <fstream>
#include <cstring>
#include <cmath>
#include "bmplib.cpp"

using namespace std;
unsigned char photo[SIZE][SIZE];
unsigned char image[SIZE][SIZE];
unsigned char imageT[SIZE][SIZE];
int arr1[128][128];
int arr2[128][128];
int arr3[128][128];
int arr4[128][128];

void load_Image ();
void save_Image ();
void Black_White();
void merge_image();
void Invert ();
void flip_image();
void rotate90 ();
void rotate180 ();
void rotate270 ();
void LightOrDark();
void Crop_Image();
void enlarge (int k);
void shrink();
void Mirror_Image ();
void shuffle (int k,int b, int a, int s);
void Blur();
void skew_horizontal(double k);
void skew_horizontal45();
void skew_vertical(double k);
void skew_vertical45();
bool menu();

int main() {
    cout<<"welcome to our program\n";
    bool flag=true;
    load_Image();
    while(flag){
        if (!menu())
            break;
    }
    cout<<"Thank you and hope you have enjoyed it\n";
    return 0;
}

//_________________________________________
void load_Image () {
    char imageFileName[100];
    // Get gray scale image file name
    cout << "Enter the source image file name: ";
    cin >> imageFileName;
    // Add to it .bmp extension and load image (getting time)
    strcat (imageFileName, ".bmp");
    readGSBMP(imageFileName, image);
}

//_________________________________________
void save_Image () {
    char imageFileName[100];
    // Get gray scale image file name
    cout << "Enter the target image file name: ";
    cin >> imageFileName;
    // Add to it .bmp extension and load image (saving time)
    strcat (imageFileName, ".bmp");
    writeGSBMP(imageFileName, image);
}

//_________________________________________
void Black_White() {
    for (int i = 0; i < SIZE; i++) {
        for (int j = 0; j< SIZE; j++) {



            if (image[i][j] > 111)
                image[i][j] = 255;
            else
                image[i][j] = 0;
        }
    }
}
//__________________________________________
void flip_image() {
    char dim;
    cout<<"Do you want to flip the image vertically (V) or horizontally (H)? ";
    cin>>dim;
    if (dim=='V'|| dim=='v'){
        for (int i = 0; i < SIZE; ++i) {
            for (int j = 0; j < SIZE/2; ++j) {
                swap(image[i][j],image[i][SIZE-j]);
            }
        }
    }
    else if (dim=='H'|| dim =='h'){
        for (int i = 0; i < SIZE/2; ++i) {
            for (int j = 0; j < SIZE; ++j) {
                swap(image[i][j],image[SIZE-i][j]);
            }
        }
    }
}
//____________________________________________________
void detect_edges() {


    for (int i = 0; i < SIZE; ++i) {
        for (int j = 0; j < SIZE; ++j) {
            if (abs(image[i][j] - image[i][j+1] ) >= 30){
                image[i][j]=0;
            }else
                image[i][j]=255;
        }
    }

}
//----------------------------------------------------------
void  Mirror_Image () {
    string half;
    cout<<"which half do you want to be mirrored?";
    cin>>half;
    if (half=="left"){
        for (int i = 0; i <SIZE; ++i) {
            for (int j = 0; j < SIZE/2; ++j) {
                image[i][SIZE-j]=image[i][j];
            }
        }
    }
    else if (half=="right"){
        for (int i = 0; i < SIZE; ++i) {
            for (int j = 0; j < SIZE/2; ++j) {
                image[i][j]=image[i][SIZE-j];
            }
        }
    }
    else if (half=="up"){
        for (int i = 0; i < SIZE/2; ++i) {
            for (int j = 0; j < SIZE; ++j) {
                image[SIZE-i][j]=image[i][j];
            }
        }
    }
    else if (half=="down"){
        for (int i = 0; i < SIZE/2; ++i) {
            for (int j = 0; j < SIZE; ++j) {
                image[i][j]=image[SIZE-i][j];
            }
        }
    }
}
//--------------------------------------------------
void crop_image() {
    int x,y,l,w;
    cout<<"Enter an x, y position and length and width: ";
    cin>>x>>y>>l>>w;

    for (int i = 0; i < SIZE; ++i) {
        for (int j = 0; j < SIZE; ++j) {
            if (i < x || i > x + l || j < y || j> y + w) {
                image[i][j] = 255;}

        }

    }}
//------------------------------------------------------
